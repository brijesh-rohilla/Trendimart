import { createSlice, createAsyncThunk } from "@reduxjs/toolkit";
import axios from "axios";

// Async thunk action to fetch products from API
export const fetchCartProducts = createAsyncThunk(
  "api/postData",
  async ({ id, singleItem }, data) => {
    const postRequest = await axios.post(
      `http://localhost:3001/cart`,
      singleItem
    );
    console.log("postRequest: ", postRequest);
    return postRequest.data;
  }
);

// Redux Toolkit slice
const cartSlice = createSlice({
  name: "cart",
  initialState: {
    data: [],
    isLoading: false,
    error: null,
  },
  reducers: {
    addToCart: (state, action) => {
      // const productId = action.payload;
      // const productId = fetchCartProducts(action.payload.id, action.payload.singleItem)
      // state.cart.push(productId);
    },
  },
  extraReducers: (builder) => {
    builder
      .addCase(fetchCartProducts.pending, (state) => {
        state.isLoading = true;
        state.error = null;
      })
      .addCase(fetchCartProducts.fulfilled, (state, action) => {
        // state.cart.push(...action.payload);
        state.isLoading = false;
      })
      .addCase(fetchCartProducts.rejected, (state, action) => {
        state.isLoading = false;
        state.error = action.error.message;
      });
  },
});

// Actions generated by Redux Toolkit slice
export const { addToCart } = cartSlice.actions;

// Selectors
export const selectCart = (state) => state.products.cart;
export const selectIsLoading = (state) => state.products.isLoading;
export const selectError = (state) => state.products.error;

export default cartSlice.reducer;
